name: Build & Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Create and activate virtual environment
        if: runner.os != 'Windows'
        run: |
          python -m venv .venv
          source .venv/bin/activate

      - name: Create and activate virtual environment on Windows
        if: runner.os == 'Windows'
        run: |
          python -m venv .venv
          .venv\Scripts\activate

      - name: Build artifacts
        run: |
          pip install .
          build

      - name: Compress artifacts on Linux
        if: runner.os == 'Linux'
        run: |
          cd dist
          zip -r ../MHGU_MHXX_Save_Converter_Script_${{ runner.os }}_${{ github.ref_name }}.zip *

      - name: Compress artifacts on MacOS
        if: runner.os == 'macOS'
        run: |
          cd dist
          zip -r ../MHGU_MHXX_Save_Converter_Script_${{ runner.os }}_Universal_${{ github.ref_name }}.zip *

      - name: Compress artifacts on Windows
        if: runner.os == 'Windows'
        run: |
          7z a MHGU_MHXX_Save_Converter_Script_${{ runner.os }}_${{ github.ref_name }}.zip ./dist/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MHGU_MHXX_Save_Converter_Script_${{ runner.os }}
          path: ./*.zip
          retention-days: 2
          compression-level: 9
  Release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: my-artifacts
          pattern: MHGU_MHXX_Save_Converter_Script_*
          merge-multiple: true
      - run: ls -R my-artifacts

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' my-artifacts/*
          --repo '${{ github.repository }}'
